{"version":3,"sources":["components/Calculator.module.css","components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","waterUnits","key","text","value","tempUnits","Calculator","useState","amount","units","temp_start","temp_finish","waterParams","setWaterParams","ice","setIce","Container","className","styles","Header","content","textAlign","Grid","columns","centered","Row","Input","label","fluid","onChange","e","data","newWater","action","Dropdown","button","basic","floating","options","defaultValue","style","width","Button","primary","onClick","t_s","t_f","m_w","result","Math","round","console","log","Segment","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50f1bd6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Calculator_container__7I7K6\"};","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  Container,\r\n  Dropdown,\r\n  Header,\r\n  Grid,\r\n  Button,\r\n  Segment\r\n} from \"semantic-ui-react\";\r\nimport * as styles from \"./Calculator.module.css\"\r\n\r\nconst waterUnits = [\r\n  { key: \"kg\", text: \"kg\", value: \"kg\" },\r\n  { key: \"g\", text: \"g\", value: \"g\" },\r\n  { key: \"gal\", text: \"gal\", value: \"gal\" },\r\n];\r\n\r\nconst tempUnits = [\r\n  { key: \"F\", text: \"F\", value: \"F\" },\r\n  { key: \"C\", text: \"C\", value: \"C\" },\r\n];\r\n\r\nconst Calculator = () => {\r\n  const [waterParams, setWaterParams] = useState({\r\n    amount: {\r\n      value: 0,\r\n      units: \"gal\",\r\n    },\r\n    temp_start: {\r\n      value: 0,\r\n      units: \"C\",\r\n    },\r\n    temp_finish: {\r\n      value: 0,\r\n      units: \"C\",\r\n    },\r\n  });\r\n  const [ice, setIce] = useState(0);\r\n\r\n  const onWaterAmountChange = (e, data) => {\r\n    var newWater = waterParams;\r\n    newWater.amount.value = data.value;\r\n    setWaterParams(newWater);\r\n  };\r\n\r\n  const onWaterTempStartChange = (e, data) => {\r\n    var newWater = waterParams;\r\n    newWater.temp_start.value = data.value;\r\n    setWaterParams(newWater);\r\n  };\r\n\r\n  const onWaterTempFinishChange = (e, data) => {\r\n    var newWater = waterParams;\r\n    newWater.temp_finish.value = data.value;\r\n    setWaterParams(newWater);\r\n  };\r\n\r\n  const OnWaterAmountUnitsChange = (e, data) => {\r\n    var newWater = waterParams;\r\n    newWater.amount.units = data.value;\r\n    setWaterParams(newWater);\r\n  };\r\n\r\n  const OnWaterTempStartUnitsChange = (e, data) => {\r\n    var newWater = waterParams;\r\n    newWater.temp_start.units = data.value;\r\n    setWaterParams(newWater);\r\n  };\r\n\r\n  const OnWaterTempFinishUnitsChange = (e, data) => {\r\n    var newWater = waterParams;\r\n    newWater.temp_finish.units = data.value;\r\n    setWaterParams(newWater);\r\n  };\r\n\r\n  const calculateIce = () => {\r\n    var t_s = waterParams.temp_start.value;\r\n    var t_f = waterParams.temp_finish.value;\r\n    var m_w = waterParams.amount.value;\r\n\r\n    switch (waterParams.amount.units) {\r\n      case 'g':\r\n        break;\r\n      case 'gal':\r\n        m_w *= 3785.4118;\r\n        break;\r\n      case 'kg':\r\n        m_w *= 1000;\r\n        break;\r\n    }\r\n\r\n    if (waterParams.temp_start.units === 'F') {\r\n      t_s = (t_s - 32) * 5/9\r\n    }\r\n\r\n    if (waterParams.temp_finish.units === 'F') {\r\n      t_f = (t_f - 32) * 5/9\r\n    }\r\n\r\n    var result = (4.186 * m_w * (t_s - t_f)) / (334 + 4.186* t_f);\r\n\r\n    switch (waterParams.amount.units) {\r\n      case 'g':\r\n        break;\r\n      case 'gal':\r\n        result /= 3785.4118;\r\n        break;\r\n      case 'kg':\r\n        result /= 1000;\r\n        break;\r\n    }\r\n\r\n\r\n    result = Math.round(result * 10) / 10\r\n    console.log(result);\r\n    setIce(result);\r\n  };\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <Header content=\"Inputs\" textAlign=\"center\" />\r\n      <Grid columns={1} centered>\r\n        <Grid.Row>\r\n          <Input\r\n            label=\"Amount of Water:\"\r\n            fluid\r\n            onChange={onWaterAmountChange}\r\n            action={\r\n              <Dropdown\r\n                button\r\n                basic\r\n                floating\r\n                options={waterUnits}\r\n                defaultValue=\"gal\"\r\n                onChange={OnWaterAmountUnitsChange}\r\n              />\r\n            }\r\n            style={{ width: \"350px\" }}\r\n          ></Input>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Input\r\n            label=\"Starting Temperature:\"\r\n            fluid\r\n            onChange={onWaterTempStartChange}\r\n            action={\r\n              <Dropdown\r\n                button\r\n                basic\r\n                floating\r\n                options={tempUnits}\r\n                defaultValue=\"C\"\r\n                onChange={OnWaterTempStartUnitsChange}\r\n              />\r\n            }\r\n            style={{ width: \"350px\" }}\r\n          ></Input>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Input\r\n            label=\"Desired Temperature:\"\r\n            fluid\r\n            onChange={onWaterTempFinishChange}\r\n            action={\r\n              <Dropdown\r\n                button\r\n                basic\r\n                floating\r\n                options={tempUnits}\r\n                defaultValue=\"C\"\r\n                onChange={OnWaterTempFinishUnitsChange}\r\n              />\r\n            }\r\n            style={{ width: \"350px\" }}\r\n          ></Input>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Button primary content=\"Calculate\" onClick={calculateIce} />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Segment content={ice + waterParams.amount.units}/>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import './App.css';\r\nimport Calculator from './components/Calculator.js'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Calculator/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}