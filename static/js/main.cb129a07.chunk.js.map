{"version":3,"sources":["components/Calculator.module.css","calculations/calculations.js","components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","waterAmountToGrams","amount","units","ret_amount","Error","temperatureToC","value","ret_temperature","iceFromGramsToUnits","desired_units","ret_ice","waterUnits","key","text","iceUnits","tempUnits","Calculator","useState","temp_start","temp_finish","result","waterParams","setWaterParams","ice","setIce","calculateIce","water_start_temp","water_start_units","water_finish_temp","water_finish_units","water_amount","water_amount_units","result_units","t_s","t_f","Math","round","console","log","calc","Container","className","styles","Header","content","textAlign","Grid","columns","centered","Row","Input","label","fluid","onChange","e","data","newWater","action","Dropdown","button","basic","floating","options","defaultValue","style","width","Button","primary","onClick","horizontal","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,UAAY,gC,iNCwBjBC,EAAqB,SAACC,EAAQC,GAEzC,IAAIC,EAEJ,OAAQD,GACN,IAAK,IACHC,EAAaF,EACb,MACF,IAAK,MACHE,EAAsB,UAATF,EACb,MACF,IAAK,KACHE,EAAsB,IAATF,EACb,MACF,QACE,MAAM,IAAIG,MAAM,0CAGpB,OAAOD,GAGIE,EAAiB,SAACC,EAAOJ,GAEpC,IAAIK,EAEJ,OAAQL,GACN,IAAK,IACHK,EAAkBD,EAClB,MACF,IAAK,IACHC,EAAkC,GAAdD,EAAQ,IAAW,EACvC,MACF,QACE,MAAM,IAAIF,MAAM,oCAGpB,OAAOG,GAGIC,EAAsB,SAACF,EAAOG,GAEzC,IAAIC,EAEJ,OAAQD,GACN,IAAK,IACHC,EAAUJ,EACV,MACF,IAAK,MACHI,EAAUJ,EAAQ,UAClB,MACF,IAAK,KACHI,EAAUJ,EAAQ,IAClB,MACF,IAAK,MACHI,EAAU,UAAaJ,EACvB,MACF,QACE,MAAM,IAAIF,MAAM,oCAGpB,OAAOM,G,OCxEHC,EAAa,CACjB,CAAEC,IAAK,KAAMC,KAAM,KAAMP,MAAO,MAChC,CAAEM,IAAK,IAAKC,KAAM,IAAKP,MAAO,KAC9B,CAAEM,IAAK,MAAOC,KAAM,MAAOP,MAAO,QAG9BQ,EAAW,CACf,CAAEF,IAAK,KAAMC,KAAM,KAAMP,MAAO,MAChC,CAAEM,IAAK,IAAKC,KAAM,IAAKP,MAAO,KAC9B,CAAEM,IAAK,MAAOC,KAAM,MAAOP,MAAO,OAClC,CAAEM,IAAK,MAAOC,KAAM,MAAOP,MAAO,QAG9BS,EAAY,CAChB,CAAEH,IAAK,IAAKC,KAAM,IAAKP,MAAO,KAC9B,CAAEM,IAAK,IAAKC,KAAM,IAAKP,MAAO,MAiKjBU,EA9JI,WACjB,MAAsCC,mBAAS,CAC7ChB,OAAQ,CACNK,MAAO,EACPJ,MAAO,OAETgB,WAAY,CACVZ,MAAO,EACPJ,MAAO,KAETiB,YAAa,CACXb,MAAO,EACPJ,MAAO,KAETkB,OAAQ,CACNlB,MAAO,SAdX,mBAAOmB,EAAP,KAAoBC,EAApB,KAiBA,EAAsBL,mBAAS,GAA/B,mBAAOM,EAAP,KAAYC,EAAZ,KA6CMC,EAAe,WACnB,IAAIL,ED/FoB,SAC1BM,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAIA,IAAIC,EAAM5B,EAAeqB,EAAkBC,GACvCO,EAAM7B,EAAeuB,EAAmBC,GAIxCT,EAAU,MAHJpB,EAAmB8B,EAAcC,IAGdE,EAAMC,IAAS,IAAM,MAAQA,GAM1D,OAHAd,EAASZ,EAAoBY,EAAQY,GACrCZ,EAASe,KAAKC,MAAe,IAAThB,GAAgB,IACpCiB,QAAQC,IAAIlB,GACLA,ECyEQmB,CACXlB,EAAYH,WAAWZ,MACvBe,EAAYH,WAAWhB,MACvBmB,EAAYF,YAAYb,MACxBe,EAAYF,YAAYjB,MACxBmB,EAAYpB,OAAOK,MACnBe,EAAYpB,OAAOC,MACnBmB,EAAYD,OAAOlB,OAErBmC,QAAQC,IAAI,UAAYlB,GACxBI,EAAOJ,IAGT,OACE,eAACoB,EAAA,EAAD,CAAWC,UAAWC,YAAtB,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,0BAA0BC,UAAU,WACpD,eAACC,EAAA,EAAD,CAAMC,QAAS,EAAGC,UAAQ,EAA1B,UACE,cAACF,EAAA,EAAKG,IAAN,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,mBACNC,OAAK,EACLC,SAjEkB,SAACC,EAAGC,GAC9B,IAAIC,EAAWnC,EACfmC,EAASvD,OAAOK,MAAQiD,EAAKjD,MAC7BgB,EAAekC,IA+DPC,OACE,cAACC,EAAA,EAAD,CACEC,QAAM,EACNC,OAAK,EACLC,UAAQ,EACRC,QAASnD,EACToD,aAAa,MACbV,SAvDmB,SAACC,EAAGC,GACnC,IAAIC,EAAWnC,EACfmC,EAASvD,OAAOC,MAAQqD,EAAKjD,MAC7BgB,EAAekC,MAuDPQ,MAAO,CAAEC,MAAO,aAGpB,cAACnB,EAAA,EAAKG,IAAN,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,wBACNC,OAAK,EACLC,SA7EqB,SAACC,EAAGC,GACjC,IAAIC,EAAWnC,EACfmC,EAAStC,WAAWZ,MAAQiD,EAAKjD,MACjCgB,EAAekC,IA2EPC,OACE,cAACC,EAAA,EAAD,CACEC,QAAM,EACNC,OAAK,EACLC,UAAQ,EACRC,QAAS/C,EACTgD,aAAa,IACbV,SAnEsB,SAACC,EAAGC,GACtC,IAAIC,EAAWnC,EACfmC,EAAStC,WAAWhB,MAAQqD,EAAKjD,MACjCgB,EAAekC,MAmEPQ,MAAO,CAAEC,MAAO,aAGpB,cAACnB,EAAA,EAAKG,IAAN,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,uBACNC,OAAK,EACLC,SAzFsB,SAACC,EAAGC,GAClC,IAAIC,EAAWnC,EACfmC,EAASrC,YAAYb,MAAQiD,EAAKjD,MAClCgB,EAAekC,IAuFPC,OACE,cAACC,EAAA,EAAD,CACEC,QAAM,EACNC,OAAK,EACLC,UAAQ,EACRC,QAAS/C,EACTgD,aAAa,IACbV,SA/EuB,SAACC,EAAGC,GACvC,IAAIC,EAAWnC,EACfmC,EAASrC,YAAYjB,MAAQqD,EAAKjD,MAClCgB,EAAekC,MA+EPQ,MAAO,CAAEC,MAAO,aAGpB,cAACnB,EAAA,EAAKG,IAAN,UACE,cAACiB,EAAA,EAAD,CAAQC,SAAO,EAACvB,QAAQ,YAAYwB,QAAS3C,MAE/C,cAACqB,EAAA,EAAKG,IAAN,UACE,eAACT,EAAA,EAAD,CAAW6B,YAAU,EAArB,UACG,YAAY,4BAAI9C,IAAS,IAC1B,cAACmC,EAAA,EAAD,CACIC,QAAM,EACNC,OAAK,EACLC,UAAQ,EACRC,QAAShD,EACTiD,aAAa,MACbV,SA3FW,SAACC,EAAGC,GAC3B,IAAIC,EAAWnC,EACfmC,EAASpC,OAAOlB,MAAQqD,EAAKjD,MAC7BgB,EAAekC,GACf/B,OAyFW,uBCzKA6C,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cb129a07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Calculator_container__7I7K6\"};","export const calculateIce = (\r\n  water_start_temp,\r\n  water_start_units,\r\n  water_finish_temp,\r\n  water_finish_units,\r\n  water_amount,\r\n  water_amount_units,\r\n  result_units\r\n) => {\r\n  // Calculates the amount of ice needed to cool water down to the temperature specified\r\n\r\n  var t_s = temperatureToC(water_start_temp, water_start_units);\r\n  var t_f = temperatureToC(water_finish_temp, water_finish_units);\r\n  var m_w = waterAmountToGrams(water_amount, water_amount_units);\r\n\r\n  // calculate the result in grams of ice\r\n  var result = (4.186 * m_w * (t_s - t_f)) / (334 + 4.186 * t_f);\r\n\r\n\r\n  result = iceFromGramsToUnits(result, result_units)\r\n  result = Math.round(result * 100) / 100;\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nexport const waterAmountToGrams = (amount, units) => {\r\n  // Takes a value and its units (can be kg, g, or gal) and returns the value in grams\r\n  var ret_amount;\r\n\r\n  switch (units) {\r\n    case \"g\":\r\n      ret_amount = amount;\r\n      break;\r\n    case \"gal\":\r\n      ret_amount = amount * 3785.4118;\r\n      break;\r\n    case \"kg\":\r\n      ret_amount = amount * 1000;\r\n      break;\r\n    default:\r\n      throw new Error('Water volume/mass units not recognized');\r\n  }\r\n\r\n  return ret_amount\r\n}\r\n\r\nexport const temperatureToC = (value, units) => {\r\n  // Takes a temperature and its units (can be F or C) and returns the temperature in C\r\n  var ret_temperature;\r\n\r\n  switch (units) {\r\n    case \"C\":\r\n      ret_temperature = value;\r\n      break;\r\n    case \"F\":\r\n      ret_temperature = ((value - 32) * 5) / 9;\r\n      break;\r\n    default:\r\n      throw new Error('Temperature units not recognized');\r\n  }\r\n\r\n  return ret_temperature;\r\n}\r\n\r\nexport const iceFromGramsToUnits = (value, desired_units) => {\r\n  // Takes the ice amount in grams and converts it to the desired units\r\n  var ret_ice;\r\n\r\n  switch (desired_units) {\r\n    case \"g\":\r\n      ret_ice = value;\r\n      break;\r\n    case \"gal\":\r\n      ret_ice = value / 3785.4118;\r\n      break;\r\n    case \"kg\":\r\n      ret_ice = value / 1000;\r\n      break;\r\n    case \"lbs\":\r\n      ret_ice = 0.00220462 * value;\r\n      break;\r\n    default:\r\n      throw new Error('Temperature units not recognized');\r\n  }\r\n\r\n  return ret_ice;\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  Container,\r\n  Dropdown,\r\n  Header,\r\n  Grid,\r\n  Button,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport * as styles from \"./Calculator.module.css\";\r\nimport * as calc from \"../calculations/calculations.js\";\r\n\r\nconst waterUnits = [\r\n  { key: \"kg\", text: \"kg\", value: \"kg\" },\r\n  { key: \"g\", text: \"g\", value: \"g\" },\r\n  { key: \"gal\", text: \"gal\", value: \"gal\" },\r\n];\r\n\r\nconst iceUnits = [\r\n  { key: \"kg\", text: \"kg\", value: \"kg\" },\r\n  { key: \"g\", text: \"g\", value: \"g\" },\r\n  { key: \"gal\", text: \"gal\", value: \"gal\" },\r\n  { key: \"lbs\", text: \"lbs\", value: \"lbs\"},\r\n];\r\n\r\nconst tempUnits = [\r\n  { key: \"F\", text: \"F\", value: \"F\" },\r\n  { key: \"C\", text: \"C\", value: \"C\" },\r\n];\r\n\r\nconst Calculator = () => {\r\n  const [waterParams, setWaterParams] = useState({\r\n    amount: {\r\n      value: 0,\r\n      units: \"gal\",\r\n    },\r\n    temp_start: {\r\n      value: 0,\r\n      units: \"C\",\r\n    },\r\n    temp_finish: {\r\n      value: 0,\r\n      units: \"C\",\r\n    },\r\n    result: {\r\n      units: \"lbs\"\r\n    }\r\n  });\r\n  const [ice, setIce] = useState(0);\r\n\r\n  const onWaterAmountChange = (e, data) => {\r\n    var newWater = waterParams;\r\n    newWater.amount.value = data.value;\r\n    setWaterParams(newWater);\r\n  };\r\n\r\n  const onWaterTempStartChange = (e, data) => {\r\n    var newWater = waterParams;\r\n    newWater.temp_start.value = data.value;\r\n    setWaterParams(newWater);\r\n  };\r\n\r\n  const onWaterTempFinishChange = (e, data) => {\r\n    var newWater = waterParams;\r\n    newWater.temp_finish.value = data.value;\r\n    setWaterParams(newWater);\r\n  };\r\n\r\n  const OnWaterAmountUnitsChange = (e, data) => {\r\n    var newWater = waterParams;\r\n    newWater.amount.units = data.value;\r\n    setWaterParams(newWater);\r\n  };\r\n\r\n  const OnWaterTempStartUnitsChange = (e, data) => {\r\n    var newWater = waterParams;\r\n    newWater.temp_start.units = data.value;\r\n    setWaterParams(newWater);\r\n  };\r\n\r\n  const OnWaterTempFinishUnitsChange = (e, data) => {\r\n    var newWater = waterParams;\r\n    newWater.temp_finish.units = data.value;\r\n    setWaterParams(newWater);\r\n  };\r\n\r\n  const OnIceUnitsChange = (e, data) => {\r\n    var newWater = waterParams;\r\n    newWater.result.units = data.value;\r\n    setWaterParams(newWater);\r\n    calculateIce();\r\n  }\r\n\r\n  const calculateIce = () => {\r\n    var result = calc.calculateIce(\r\n      waterParams.temp_start.value,\r\n      waterParams.temp_start.units,\r\n      waterParams.temp_finish.value,\r\n      waterParams.temp_finish.units,\r\n      waterParams.amount.value,\r\n      waterParams.amount.units,\r\n      waterParams.result.units\r\n    );\r\n    console.log(\"Result:\" + result);\r\n    setIce(result);\r\n  };\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <Header content=\"How much ice do I need?\" textAlign=\"center\" />\r\n      <Grid columns={1} centered>\r\n        <Grid.Row>\r\n          <Input\r\n            label=\"Amount of Water:\"\r\n            fluid\r\n            onChange={onWaterAmountChange}\r\n            action={\r\n              <Dropdown\r\n                button\r\n                basic\r\n                floating\r\n                options={waterUnits}\r\n                defaultValue=\"gal\"\r\n                onChange={OnWaterAmountUnitsChange}\r\n              />\r\n            }\r\n            style={{ width: \"350px\" }}\r\n          ></Input>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Input\r\n            label=\"Starting Temperature:\"\r\n            fluid\r\n            onChange={onWaterTempStartChange}\r\n            action={\r\n              <Dropdown\r\n                button\r\n                basic\r\n                floating\r\n                options={tempUnits}\r\n                defaultValue=\"C\"\r\n                onChange={OnWaterTempStartUnitsChange}\r\n              />\r\n            }\r\n            style={{ width: \"350px\" }}\r\n          ></Input>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Input\r\n            label=\"Desired Temperature:\"\r\n            fluid\r\n            onChange={onWaterTempFinishChange}\r\n            action={\r\n              <Dropdown\r\n                button\r\n                basic\r\n                floating\r\n                options={tempUnits}\r\n                defaultValue=\"C\"\r\n                onChange={OnWaterTempFinishUnitsChange}\r\n              />\r\n            }\r\n            style={{ width: \"350px\" }}\r\n          ></Input>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Button primary content=\"Calculate\" onClick={calculateIce} />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Container horizontal>\r\n            {\"You need \"}<b>{ice}</b>{\" \"}\r\n            <Dropdown\r\n                button\r\n                basic\r\n                floating\r\n                options={iceUnits}\r\n                defaultValue=\"lbs\"\r\n                onChange={OnIceUnitsChange}\r\n              ></Dropdown>\r\n              {\" of ice.\"}\r\n              \r\n          </Container>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import './App.css';\r\nimport Calculator from './components/Calculator.js'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Calculator/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}